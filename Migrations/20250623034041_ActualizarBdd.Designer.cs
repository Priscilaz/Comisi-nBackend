// <auto-generated />
using System;
using FastCommissionBack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FastCommissionBack.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250623034041_ActualizarBdd")]
    partial class ActualizarBdd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FastCommissionBack.Models.Regla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Porcentaje")
                        .HasPrecision(5, 4)
                        .HasColumnType("decimal(5,4)");

                    b.HasKey("Id");

                    b.ToTable("Reglas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 600m,
                            Porcentaje = 0.06m
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 500m,
                            Porcentaje = 0.08m
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 800m,
                            Porcentaje = 0.10m
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 1000m,
                            Porcentaje = 1.15m
                        });
                });

            modelBuilder.Entity("FastCommissionBack.Models.Vendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vendedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Pablo Perez"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Camila Benavides"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Ana Castro"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Johny Martinez"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Laura Torres"
                        });
                });

            modelBuilder.Entity("FastCommissionBack.Models.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Valor")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendedorId");

                    b.ToTable("Ventas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Fecha = new DateTime(2025, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valor = 400m,
                            VendedorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Fecha = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valor = 600m,
                            VendedorId = 2
                        },
                        new
                        {
                            Id = 3,
                            Fecha = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valor = 200m,
                            VendedorId = 3
                        },
                        new
                        {
                            Id = 4,
                            Fecha = new DateTime(2025, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valor = 300m,
                            VendedorId = 4
                        },
                        new
                        {
                            Id = 5,
                            Fecha = new DateTime(2025, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valor = 1000m,
                            VendedorId = 5
                        },
                        new
                        {
                            Id = 6,
                            Fecha = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valor = 800m,
                            VendedorId = 1
                        },
                        new
                        {
                            Id = 7,
                            Fecha = new DateTime(2025, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valor = 500m,
                            VendedorId = 2
                        },
                        new
                        {
                            Id = 8,
                            Fecha = new DateTime(2025, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valor = 700m,
                            VendedorId = 3
                        },
                        new
                        {
                            Id = 9,
                            Fecha = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valor = 900m,
                            VendedorId = 4
                        },
                        new
                        {
                            Id = 10,
                            Fecha = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Valor = 1200m,
                            VendedorId = 5
                        });
                });

            modelBuilder.Entity("FastCommissionBack.Models.Venta", b =>
                {
                    b.HasOne("FastCommissionBack.Models.Vendedor", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendedor");
                });
#pragma warning restore 612, 618
        }
    }
}
